{"ast":null,"code":"var _jsxFileName = \"/Users/nithyapandurangan/Library/Mobile Documents/com~apple~CloudDocs/Desktop/colour-analysis-tool/FrontEnd/src/components/Tool/WebcamCapture.jsx\";\nimport React from 'react';\nimport Webcam from \"react-webcam\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WebcamCapture = ({\n  isWebcamOpen,\n  captureImageFromWebcam,\n  webcamRef\n}) => {\n  if (!webcamRef || typeof isWebcamOpen !== \"boolean\") {\n    console.error(\"Invalid prop values: ensure webcamRef is a valid ref and isWebcamOpen is a boolean.\");\n    return null; // Return nothing if there is an issue with the props\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: isWebcamOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        className: \"rounded-lg shadow-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: captureImageFromWebcam,\n        className: \"mt-4 px-4 py-2 bg-green-500 text-white rounded-lg hover:bg-green-700\",\n        children: \"Capture Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = WebcamCapture;\nexport default WebcamCapture;\nvar _c;\n$RefreshReg$(_c, \"WebcamCapture\");","map":{"version":3,"names":["React","Webcam","jsxDEV","_jsxDEV","Fragment","_Fragment","WebcamCapture","isWebcamOpen","captureImageFromWebcam","webcamRef","console","error","className","children","audio","ref","screenshotFormat","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/nithyapandurangan/Library/Mobile Documents/com~apple~CloudDocs/Desktop/colour-analysis-tool/FrontEnd/src/components/Tool/WebcamCapture.jsx"],"sourcesContent":["import React from 'react';\nimport Webcam from \"react-webcam\";\n\nconst WebcamCapture = ({ isWebcamOpen, captureImageFromWebcam, webcamRef }) => {\n  if (!webcamRef || typeof isWebcamOpen !== \"boolean\") {\n    console.error(\"Invalid prop values: ensure webcamRef is a valid ref and isWebcamOpen is a boolean.\");\n    return null; // Return nothing if there is an issue with the props\n  }\n\n  return (\n    <div className=\"mb-4\">\n      {isWebcamOpen && (\n        <>\n          <Webcam\n            audio={false}\n            ref={webcamRef}\n            screenshotFormat=\"image/jpeg\"\n            className=\"rounded-lg shadow-lg\"\n          />\n          <button\n            onClick={captureImageFromWebcam}\n            className=\"mt-4 px-4 py-2 bg-green-500 text-white rounded-lg hover:bg-green-700\"\n          >\n            Capture Photo\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default WebcamCapture;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,aAAa,GAAGA,CAAC;EAAEC,YAAY;EAAEC,sBAAsB;EAAEC;AAAU,CAAC,KAAK;EAC7E,IAAI,CAACA,SAAS,IAAI,OAAOF,YAAY,KAAK,SAAS,EAAE;IACnDG,OAAO,CAACC,KAAK,CAAC,qFAAqF,CAAC;IACpG,OAAO,IAAI,CAAC,CAAC;EACf;EAEA,oBACER,OAAA;IAAKS,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClBN,YAAY,iBACXJ,OAAA,CAAAE,SAAA;MAAAQ,QAAA,gBACEV,OAAA,CAACF,MAAM;QACLa,KAAK,EAAE,KAAM;QACbC,GAAG,EAAEN,SAAU;QACfO,gBAAgB,EAAC,YAAY;QAC7BJ,SAAS,EAAC;MAAsB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eACFjB,OAAA;QACEkB,OAAO,EAAEb,sBAAuB;QAChCI,SAAS,EAAC,sEAAsE;QAAAC,QAAA,EACjF;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACE,EAAA,GA1BIhB,aAAa;AA4BnB,eAAeA,aAAa;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}